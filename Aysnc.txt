<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function wait(ms){
            return new Promise(resolve=> setTimeout(resolve,ms))
        }
        wait(1000)

        .then(()=>{
            console.log("Step 1")
            return wait(1000)  
        })

        .then(()=>{
            console.log("step 2") 
            return wait(1000)
        })

        .then(()=>{
            console.log("Step 3")
        })
    </script>
</body>
</html>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        let myPromise = new Promise((resolve,reject)=>{
            setTimeout(()=>resolve(5),1000)
        })

        myPromise

        .then(result=>{
            console.log(result);  //Print 5
            return result*2   //become 10
        })

        .then(result=>{
            console.log(result)
            return result+2;
        })

        .then(result=>{
            console.log(result)
        })
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{text-align: center; font-family: Arial, Helvetica, sans-serif;}
        #status{ font-size: 20px; margin-top: 20px; font-weight: bold;}
        #orderBtn{
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Online Food Order Tracker</h1>
    <button id="orderBtn">Place order</button>
    <p id="status">Waiting for order...</p>

    <script>
        //Callback
        function placeOrder(callback){
            setTimeout(()=>{
               callback("Order placed! Preparing the food")
            },2000)
        }


        function prepareOrder(callback){
            setTimeout(()=>{
               callback("Food is being prepared")
            },3000)
        }


        
        function OutforDelivery(callback){
            setTimeout(()=>{
               callback("Out for delivery")
            },4000)
        }

        
        function Orderdelivered(callback){
            setTimeout(()=>{
               callback("Order delivered")
            },3000)
        }

        document.getElementById("orderBtn").addEventListener("click",function(){
            let statusText = document.getElementById("status")

            placeOrder(function(status){
                statusText.innerText = status
                prepareOrder(function(status){
                   statusText.innerText = status;
                   OutforDelivery(function(status){
                     statusText.innerText = status;
                     Orderdelivered(function(status){
                        statusText.innerText = status;
                     })
                   }) 
                })
            })
        })
    </script>
</body>
</html>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
         body{text-align: center; font-family: Arial, Helvetica, sans-serif;}
        #status{ font-size: 20px; margin-top: 20px; font-weight: bold;}
        #orderBtn{
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
        }

        .progress-conatiner{ width: 50%;background-color: #ddd;margin: 20px auto; border-radius: 10px; }

        .progress-bar {width: 0%;  height: 30px; background-color: #4CAF50; border-radius: 10px; text-align: center; color: white; line-height: 30px;}
    </style>
</head>
<body>
    <h1>Online food order tracker</h1>
    <button id="orderBtn">Place order</button>
    <p id="status"></p>

    <!-- Progess bar -->
     <div class="progress-conatiner">
        <div class="progress-bar" id="progress">0%</div>
     </div>

     <script>
        function updateProgress(percent){
            let progressBar =document.getElementById("progress")
            progressBar.style.width = percent + "%"
            progressBar.innerText = percent + "%"
        }


        function orderStep(statusText,time,progress){
            return new Promise((resolve)=>{

                setTimeout(()=>{
                    document.getElementById("status").innerText = statusText
                    updateProgress(progress)
                    resolve()
                },time)
            })
        }


        document.getElementById("orderBtn").addEventListener("click",function(){
            updateProgress(0);   //Reset Progress
            document.getElementById("status").innerHTML= "Processing your order"

            orderStep("Order Placed",2000,25)
             .then(()=> orderStep("Food is being Prepapred..",3000,50))
             .then(()=> orderStep("Out of delivery..",4000,75))
             .then(()=> orderStep("Order Deliverd..",3000,100))
            

        })
     </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
    //    
    

    //      let promise1 = Promise.reject("Task 1 fail")
    //     let promise2 = Promise.reject("Task 2 fail")
    //     let promise3 = Promise.resolve("Task 3 done")
    //      let promise4 = Promise.resolve("Task 4 done")
 
    //   //Promse.any : first promsise to get resolve 
    //    Promise.any([promise1,promise2,promise3,promise4])

    //    .then(result=>{
    //     console.log(result)
    //    })

    //    .catch(error=>{
    //     console.log(error)
    //    })





    //     let promise1 = Promise.reject("Task 1 fail")
    //     let promise2 = Promise.reject("Task 2 fail")
    //     let promise3 = Promise.resolve("Task 3 done")
    //      let promise4 = Promise.resolve("Task 4 done")
 
    //   //Promse.race : any promise which resolve or reject first 
    //    Promise.race([promise1,promise2,promise3,promise4])

    //    .then(result=>{
    //     console.log(result)
    //    })

    //    .catch(error=>{
    //     console.log(error)
    //    })


    //    .finally(()=>{
    //     console.log("Task done")
    //    })



     let promise1 = Promise.reject("Task 1 fail")
        let promise2 = Promise.reject("Task 2 fail")
        let promise3 = Promise.resolve("Task 3 done")
         let promise4 = Promise.resolve("Task 4 done")
 
      //Promse.race : any promise which resolve or reject first 
       Promise.allSettled([promise1,promise2,promise3,promise4])

       .then(result=>{
        console.log(result)
       })

       .catch(error=>{
        console.log(error)
       })


       .finally(()=>{
        console.log("Task done")
       })
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        //fetch("API ADDRESS"): fetch data from api
        
        // fetch("http://randomuser.me/api")

        // .then(response=>response.json())
        // .then(data=> console.log(data.results))
        // .catch(error=>console.log("Error:" ,error))



        fetch("https://api.dictionaryapi.dev/api/v2/entries/en/hello")

        .then(response=>response.json())
        .then(data=> console.log(data[0].meanings[0].definitions[0].definition))
        .catch(error=>console.log("Error:" ,error))
    </script>
</body>
</html>